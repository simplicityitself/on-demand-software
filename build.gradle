apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'maven'

group="com.simplicityitself"

//Can be used in a Jenkins environment to dynamically set the version number from the build.
if (System.getenv("BUILD_NUMBER")) {
  version=System.getenv("BUILD_NUMBER")
}
version="DEVELOPER"

buildscript {
  apply from: 'https://github.com/valkolovos/gradle_cobertura/raw/master/repo/gradle_cobertura/gradle_cobertura/1.2.1/coberturainit.gradle'
  repositories {
    mavenCentral()
    maven {
      url "http://download.java.net/maven/2"
    }
    maven { url 'http://repo.spring.io/plugins-release' }
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8'
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
  }
}


repositories {
  mavenCentral()
  maven { url 'http://repo.spring.io/milestone/'}
}

dependencies {
    def tomcatVersion = '7.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile 'org.springframework:spring-core:3.2.3.RELEASE'
    compile 'org.springframework:spring-webmvc:3.2.3.RELEASE'
    compile 'com.jayway.jsonpath:json-path:0.8.1'
    compile 'org.springframework.hateoas:spring-hateoas:0.7.0.RELEASE'

    compile 'org.springframework.security:spring-security-web:3.2.0.M2'
    compile 'org.springframework.security:spring-security-core:3.2.0.M2'
    compile 'org.springframework.security:spring-security-config:3.2.0.M2'

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-jdk14:1.7.5'
    runtime 'com.fasterxml.jackson.core:jackson-core:2.2.2'
    runtime 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
    runtime 'javax.xml.bind:jaxb-api:2.2.9'

    provided 'javax.servlet:javax.servlet-api:3.0.1'

    testCompile 'com.jayway.jsonpath:json-path-assert:0.8.1'
    testCompile 'org.springframework:spring-test:3.2.3.RELEASE'
    testCompile 'junit:junit:4.+'
    testCompile "org.mockito:mockito-all:1.9.5"

}
findbugs {
    ignoreFailures = true
}
cobertura {
  coverageFormat="xml"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}


test {
  jvmArgs "-XX:-UseSplitVerifier" //cobertura has issues with java 7
  exclude "**/*Functional*"
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}
task unitTests(type: Test) {
  include "**/*Unit*"
}
task integrationTests(type: Test) {
  include "**/*Integration*"
}
ext {
    tomcatStopPort = 7776
    tomcatStopKey = 'stopKey'
}

task functionalTomcatRun(type: org.gradle.api.plugins.tomcat.TomcatRunWar) {
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
    httpPort=7777 
    contextPath = ""
    daemon = true
}

task functionalTomcatStop(type: org.gradle.api.plugins.tomcat.TomcatStop) {
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
}

task functionalTest(type: Test) {
    include '**/*Functional*'
    dependsOn functionalTomcatRun
    doLast { functionalTomcatStop }
}

tomcatRunWar.contextPath = ''
tomcatRunWar.httpPort=7777
